[tool.poetry]
name = "refactortrack-analytics"
version = "1.0.0"
description = "Analytics service for RefactorTrack ATS"
authors = ["RefactorTrack Team"]
license = "Proprietary"
readme = "README.md"
python = ">=3.11,<3.12"
packages = [{include = "refactortrack_analytics", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "^0.100.0"
uvicorn = "^0.22.0"
asyncpg = "^0.27.0"
motor = "^3.1.1"
elasticsearch = "^8.0.0"
redis = "^4.5.0"
aiohttp = "^3.8.0"
boto3 = "^1.26.0"
python-dotenv = "^0.19.0"
pydantic = "^2.0.0"
pandas = "^2.0.0"
numpy = "^1.24.0"
scikit-learn = "^1.3.0"
prometheus-client = "^0.17.0"
opentelemetry-api = "^1.18.0"
python-jose = "^3.3.0"
grpcio = "^1.50.0"
protobuf = "^4.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.10.0"
pytest-cov = "^4.0.0"
pytest-benchmark = "^4.0.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
flake8 = "^6.0.0"
freezegun = "^1.2.0"
safety = "^2.3.0"
memory-profiler = "^0.61.0"

[build-system]
requires = ["poetry-core>=1.4.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
testpaths = ["tests"]
python_files = "*_test.py"
asyncio_mode = "auto"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "performance: Performance tests",
    "benchmark: Benchmark tests"
]

[tool.black]
line-length = 100
target-version = ["py311"]
include = "\.pyi?$"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
max-complexity = 10

[tool.poetry.scripts]
start = "refactortrack_analytics.main:start"
test = "pytest"
lint = "flake8"
format = "black ."
type-check = "mypy ."