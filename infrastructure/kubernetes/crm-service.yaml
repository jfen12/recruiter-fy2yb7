# CRM Service Kubernetes Configuration
# Version: 1.0.0
# Kubernetes Version: v1.24+
# Description: Deployment configuration for the Client Relationship Management service

---
# CRM Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crm-service
  namespace: default
  labels:
    app: crm-service
    tier: backend
    version: 1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: crm-service
  template:
    metadata:
      labels:
        app: crm-service
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        checksum/config: "${CONFIG_CHECKSUM}"
        checksum/secrets: "${SECRETS_CHECKSUM}"
    spec:
      # Pod distribution and scheduling rules
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - crm-service
              topologyKey: kubernetes.io/hostname
      
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      # Container specifications
      containers:
      - name: crm-service
        image: docker-registry/crm-service:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        
        # Environment configuration
        env:
        - name: NODE_ENV
          value: "production"
        envFrom:
        - configMapRef:
            name: crm-config
        - secretRef:
            name: crm-secrets
        
        # Resource limits and requests
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30

---
# CRM Service - Service Definition
apiVersion: v1
kind: Service
metadata:
  name: crm-service
  namespace: default
  labels:
    app: crm-service
    version: 1.0.0
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: crm-service

---
# CRM Service - Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: crm-service-hpa
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: crm-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
# CRM Service - Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: crm-service-pdb
  namespace: default
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: crm-service