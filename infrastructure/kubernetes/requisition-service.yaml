# Requisition Service Kubernetes Configuration
# Version: 1.0.0
# Kubernetes Version: v1.24+
# Base Image: node:18-alpine

---
# Deployment configuration for the requisition service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: requisition-service
  namespace: refactortrack
  labels:
    app: requisition-service
    component: backend
    tier: service
    environment: production
    managed-by: kubernetes
    version: 1.0.0
  annotations:
    description: "Requisition service for job requisition management and candidate matching"
spec:
  replicas: 3  # Initial replica count, will be managed by HPA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: requisition-service
  template:
    metadata:
      labels:
        app: requisition-service
        component: backend
        tier: service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: requisition-service
        image: refactortrack/requisition-service:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 3001
          protocol: TCP
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
        envFrom:
        - configMapRef:
            name: requisition-config
        - secretRef:
            name: database-credentials
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: requisition-service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: requisition-service
              topologyKey: kubernetes.io/hostname

---
# Service configuration for the requisition service
apiVersion: v1
kind: Service
metadata:
  name: requisition-service
  namespace: refactortrack
  labels:
    app: requisition-service
    component: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 3001
    protocol: TCP
  selector:
    app: requisition-service
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
# Horizontal Pod Autoscaler configuration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: requisition-service-hpa
  namespace: refactortrack
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: requisition-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Pods
        value: 2
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 60