# Kubernetes Deployment Configuration for Candidate Service
# Version: 1.0
# Kubernetes Version: v1.24+

---
# Deployment configuration for the candidate service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: candidate-service
  namespace: refactortrack
  labels:
    app: candidate-service
    component: backend
    environment: production
spec:
  replicas: 3  # Initial replica count, will be managed by HPA
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: candidate-service
  template:
    metadata:
      labels:
        app: candidate-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      # Security context for enhanced container security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        allowPrivilegeEscalation: false
      
      # Pod anti-affinity for high availability across zones
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: topology.kubernetes.io/zone
            labelSelector:
              matchLabels:
                app: candidate-service
      
      containers:
      - name: candidate-service
        image: candidate-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9090
          name: metrics
        
        # Resource limits and requests
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        
        # Environment variables from ConfigMap and Secrets
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: candidate-config
              key: postgres-host
        - name: POSTGRES_PORT
          valueFrom:
            configMapKeyRef:
              name: candidate-config
              key: postgres-port
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: POSTGRES_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gateway-secrets
              key: JWT_SECRET
        
        # Health probes
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        
        startupProbe:
          httpGet:
            path: /health/startup
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30

---
# Service configuration for candidate service
apiVersion: v1
kind: Service
metadata:
  name: candidate-service
  namespace: refactortrack
  labels:
    app: candidate-service
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: candidate-service

---
# Horizontal Pod Autoscaler configuration
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: candidate-service
  namespace: refactortrack
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: candidate-service
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
# Pod Disruption Budget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: candidate-service-pdb
  namespace: refactortrack
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: candidate-service

---
# Network Policy for secure communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: candidate-service-network-policy
  namespace: refactortrack
spec:
  podSelector:
    matchLabels:
      app: candidate-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: refactortrack
    ports:
    - port: 3000
      protocol: TCP
    - port: 9090
      protocol: TCP