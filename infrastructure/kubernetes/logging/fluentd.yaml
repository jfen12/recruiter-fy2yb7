# Fluentd DaemonSet configuration for RefactorTrack centralized logging
# Version: Fluentd v1.16-1
# Dependencies: 
# - kubernetes v1.24+
# - elasticsearch service from ./elasticsearch.yaml

---
# ServiceAccount for Fluentd with minimal permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: refactortrack
  labels:
    app: refactortrack
    component: logging
    service: fluentd

---
# ClusterRole for Fluentd to access pod logs
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: refactortrack
    component: logging
    service: fluentd
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding to associate ServiceAccount with ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluentd
  labels:
    app: refactortrack
    component: logging
    service: fluentd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: refactortrack

---
# ConfigMap for Fluentd configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: refactortrack
  labels:
    app: refactortrack
    component: logging
    service: fluentd
data:
  fluent.conf: |
    # Input configurations
    <source>
      @type tail
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        time_key time
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # Kubernetes metadata enrichment
    <filter kubernetes.**>
      @type kubernetes_metadata
      kubernetes_url "#{ENV['KUBERNETES_URL']}"
      bearer_token_file /var/run/secrets/kubernetes.io/serviceaccount/token
      ca_file /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      skip_labels false
      skip_container_metadata false
      skip_namespace_metadata false
    </filter>

    # Output configuration for Elasticsearch
    <match kubernetes.**>
      @type elasticsearch
      host "#{ENV['FLUENT_ELASTICSEARCH_HOST']}"
      port "#{ENV['FLUENT_ELASTICSEARCH_PORT']}"
      scheme "#{ENV['FLUENT_ELASTICSEARCH_SCHEME']}"
      ssl_verify true
      ssl_version TLSv1_2
      user "#{ENV['FLUENT_ELASTICSEARCH_USER']}"
      password "#{ENV['FLUENT_ELASTICSEARCH_PASSWORD']}"
      
      index_name refactortrack-${tag}-%Y%m%d
      type_name fluentd
      
      # Buffer configuration
      <buffer>
        @type file
        path /var/log/fluentd-buffers/kubernetes.buffer
        flush_mode interval
        retry_type exponential_backoff
        flush_thread_count 2
        flush_interval 5s
        retry_forever false
        retry_max_interval 30
        chunk_limit_size 2M
        queue_limit_length 8
        overflow_action block
      </buffer>
    </match>

---
# DaemonSet for Fluentd
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: refactortrack
  labels:
    app: refactortrack
    component: logging
    service: fluentd
spec:
  selector:
    matchLabels:
      app: refactortrack
      component: logging
      service: fluentd
  template:
    metadata:
      labels:
        app: refactortrack
        component: logging
        service: fluentd
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "24231"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      initContainers:
      - name: volume-permissions
        image: busybox:1.35
        command: ["sh", "-c", "chmod -R 755 /var/log /var/lib/docker/containers"]
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
        securityContext:
          runAsUser: 0
      containers:
      - name: fluentd
        image: fluent/fluentd:v1.16-1
        env:
        - name: FLUENT_ELASTICSEARCH_HOST
          value: "elasticsearch.refactortrack.svc.cluster.local"
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: "https"
        - name: FLUENT_ELASTICSEARCH_USER
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: username
        - name: FLUENT_ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        - name: KUBERNETES_URL
          value: "https://kubernetes.default.svc"
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: fluentd-config
          mountPath: /fluentd/etc
        ports:
        - containerPort: 24231
          name: prometheus
        livenessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /metrics
            port: 24231
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: fluentd-config
        configMap:
          name: fluentd-config